variables:
  # Naming suffix for images to prevent clashes
  IMG_SFX:

  # Allows providing handy cross-reference to the build log
  CIRRUS_TASK_ID: "{{env `CIRRUS_TASK_ID`}}"


builders:
  - type: amazon-ebs
    name: win-server-wsl
    source_ami_filter:
      filters:
        name: &win_release "Windows_Server-2022-English-Full-Base*"
        root-device-type: ebs
        virtualization-type: hvm
      most_recent: true
      owners:
        - amazon
    # While this image should run on metal, we can build it on smaller/cheaper systems 
    instance_type: t3.large
    force_deregister: true  # Remove AMI with same name if exists
    force_delete_snapshot: true  # Also remove snapshots of force-removed AMI
    # Note that we do not set shutdown_behavior to terminate, as a clean shutdown is required
    # for windows provisioning to complete successfully.
    communicator: winrm
    winrm_username: Administrator # AWS provisions Administrator, unlike GCE 
    winrm_insecure: true
    winrm_use_ssl: true
    winrm_timeout: 25m
    # Script that runs on server start, needed to prep and enable winrm
    user_data_file: '{{template_dir}}/bootstrap.ps1' 
    # Required for network access, must be the 'default' group used by Cirrus-CI
    security_group_id: "sg-042c75677872ef81c"
    ami_name: &ami_name '{{build_name}}-c{{user `IMG_SFX`}}'
    ami_description: 'Built in https://cirrus-ci.com/task/{{user `CIRRUS_TASK_ID`}}'

    # These are critical and used by security-polciy to enforce instance launch limits.
    tags: &awstags
        # EC2 expects "Name" to be capitalized
        Name: *ami_name
        src: '{{.SourceAMI}}'
        automation: 'true'
        release: *win_release
    run_tags: *awstags
    run_volume_tags: *awstags
    snapshot_tags: *awstags
    # This is necessary for security - The CI service accounts are not permitted
    # to use AMI's from any other account, including public ones.
    ami_users:
      - &accountid '449134212816'


provisioners:
  - type: powershell
    script: '{{template_dir}}/win_packaging.ps1'
  - type: windows-restart
  - type: powershell
    inline:
      # Disable WinRM as a security precuation (cirrus launches an agent from user-data, so we don't need it)
      - Set-Service winrm -StartupType Disabled
      # Also disable RDP (can be enabled via user-data manually)
      - Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 1
      - Disable-NetFirewallRule -DisplayGroup "Remote Desktop"
  # Setup Autologon and reset, must be last, due to pw change
  - type: powershell
    script: '{{template_dir}}/auto_logon.ps1'


post-processors:
  - type: 'manifest'
    output: '{{template_dir}}/manifest.json'  # Collected by Cirrus-CI
    strip_path: true
    custom_data:
      IMG_SFX: '{{ user `IMG_SFX` }}'
      STAGE: cache
      TASK: '{{user `CIRRUS_TASK_ID`}}'

